{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Button, {Label} from '@smui/button';\n\timport Select, {Option} from '@smui/select';\n\timport LinearProgress from '@smui/linear-progress';\n\timport NumberField from './components/NumberField.svelte';\n\timport {valueStore} from './code/valueStore';\n\timport {printSolution} from './code/output';\n\timport {presets} from './code/presets';\n\timport {isItemsUnique, fillItems, prepareSpace} from \"../common\";\n\n\tlet space = [\n\t\t[1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 0, 0, 1, 1, 1],\n\t\t[1, 1, 1, 0, 0, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1]\n\t];\n\tlet solution = null;\n\n\tlet bunchChange = false;\n\tconst selectPreset = valueStore('', onChangePreset);\n\tconst width = valueStore(8, createSpace);\n\tconst height = valueStore(8, createSpace);\n\tlet allValueCorrect = true;\n\tconst all = valueStore(1, onChangeAll);\n\tconst figureI = valueStore(1, checkAllValueCorrect);\n\tconst figureN = valueStore(1, checkAllValueCorrect);\n\tconst figureL = valueStore(1, checkAllValueCorrect);\n\tconst figureU = valueStore(1, checkAllValueCorrect);\n\tconst figureX = valueStore(1, checkAllValueCorrect);\n\tconst figureW = valueStore(1, checkAllValueCorrect);\n\tconst figureP = valueStore(1, checkAllValueCorrect);\n\tconst figureF = valueStore(1, checkAllValueCorrect);\n\tconst figureZ = valueStore(1, checkAllValueCorrect);\n\tconst figureT = valueStore(1, checkAllValueCorrect);\n\tconst figureV = valueStore(1, checkAllValueCorrect);\n\tconst figureY = valueStore(1, checkAllValueCorrect);\n\tlet dataError;\n\tlet waitAnswer = false;\n\n\tlet area;\n\t$: area = space.reduce((area, line) => {\n\t\treturn line.reduce((area, cell) => area + cell, area);\n\t}, 0);\n\n\tlet windowWidth = 0;\n\tlet windowHeight = 0;\n\tlet optionsHeight = 0;\n\tlet widthOnCell;\n\tlet heightOnCell;\n\tlet cellSize;\n\n\t$: widthOnCell = (windowWidth - 16) / $width - 1;\n\t$: heightOnCell = (windowHeight - 16 - optionsHeight - 10) / $height - 1;\n\t// по ширине надо всегда вписываться из-за мобильников\n\t$: cellSize = Math.min(Math.min(40, widthOnCell), Math.min(40, Math.max(20, heightOnCell)))\n\n\tfunction onChangePreset(value) {\n\t\tif (value) {\n\t\t\tconst preset = presets.find(({name}) => name === value);\n\n\t\t\tbunchChange = true;\n\t\t\tspace = prepareSpace(preset.space);\n\t\t\theight.set(space.length);\n\t\t\twidth.set(space[0].length);\n\n\t\t\tlet items = preset.items;\n\t\t\tif (typeof items === 'number') {\n\t\t\t\titems = fillItems(items);\n\t\t\t}\n\n\t\t\tfigureI.set(items.I || 0);\n\t\t\tfigureN.set(items.N || 0);\n\t\t\tfigureL.set(items.L || 0);\n\t\t\tfigureU.set(items.U || 0);\n\t\t\tfigureX.set(items.X || 0);\n\t\t\tfigureW.set(items.W || 0);\n\t\t\tfigureP.set(items.P || 0);\n\t\t\tfigureF.set(items.F || 0);\n\t\t\tfigureZ.set(items.Z || 0);\n\t\t\tfigureT.set(items.T || 0);\n\t\t\tfigureV.set(items.V || 0);\n\t\t\tfigureY.set(items.Y || 0);\n\n\t\t\tif (getItems().every(([, count]) => count == $figureI)) {\n\t\t\t\tall.set($figureI);\n\t\t\t\tallValueCorrect = true;\n\t\t\t} else {\n\t\t\t\tallValueCorrect = false;\n\t\t\t}\n\t\t\tresetVars();\n\t\t\tbunchChange = false;\n\n\t\t\tselectPreset.set('');\n\t\t}\n\t}\n\n\tfunction createSpace() {\n\t\tif (bunchChange) {\n\t\t\treturn;\n\t\t}\n\t\tspace = [];\n\t\tfor (let y = 0; y < $height; y++) {\n\t\t\tconst line = [];\n\t\t\tfor (let x = 0; x < $width; x++) {\n\t\t\t\tline.push(1);\n\t\t\t}\n\t\t\tspace.push(line);\n\t\t}\n\t\tresetVars();\n\t}\n\n\tfunction onChangeAll(value) {\n\t\tif (bunchChange) {\n\t\t\treturn;\n\t\t}\n\t\tbunchChange = true;\n\t\tfigureI.set(value);\n\t\tfigureN.set(value);\n\t\tfigureL.set(value);\n\t\tfigureU.set(value);\n\t\tfigureX.set(value);\n\t\tfigureW.set(value);\n\t\tfigureP.set(value);\n\t\tfigureF.set(value);\n\t\tfigureZ.set(value);\n\t\tfigureT.set(value);\n\t\tfigureV.set(value);\n\t\tfigureY.set(value);\n\t\tbunchChange = false;\n\t\tallValueCorrect = true;\n\t\tresetVars();\n\t}\n\n\tfunction checkAllValueCorrect() {\n\t\tif (bunchChange) {\n\t\t\treturn;\n\t\t}\n\t\tconst items = getItems();\n\t\tallValueCorrect = items.every(([, count]) => count == $all);\n\t\tresetVars();\n\t}\n\n\tfunction onCellClick(x, y) {\n\t\tif (waitAnswer) {\n\t\t\treturn;\n\t\t}\n\n\t\tspace[y][x] = space[y][x] ? 0 : 1;\n\t\tresetVars();\n\t}\n\n\tfunction clearAll() {\n\t\tspace.forEach(line => {\n\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\tline[i] = 0;\n\t\t\t}\n\t\t});\n\t\tspace = space;\n\t\tresetVars();\n\t}\n\n\tfunction fillAll() {\n\t\tspace.forEach(line => {\n\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\tline[i] = 1;\n\t\t\t}\n\t\t});\n\t\tspace = space;\n\t\tresetVars();\n\t}\n\n\tlet worker;\n\n\tfunction onStartStop() {\n\t\tif (waitAnswer) {\n\t\t\tstop();\n\t\t} else {\n\t\t\tstart();\n\t\t}\n\t}\n\n\tfunction start() {\n\t\twaitAnswer = true;\n\t\tresetVars();\n\n\t\tconst items = getItems();\n\t\tworker = new Worker('./build/worker.js');\n\t\tworker.postMessage({items, space});\n\t\tworker.onmessage = message => {\n\t\t\twaitAnswer = false;\n\n\t\t\tconst [sol, error] = message.data;\n\t\t\tdataError = error;\n\t\t\tif (error) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!sol) {\n\t\t\t\tdataError = 'No solution';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst itemsUnique = isItemsUnique(items);\n\t\t\tsolution = printSolution(sol, itemsUnique);\n\t\t}\n\t}\n\n\tfunction stop() {\n\t\tworker.terminate();\n\t\twaitAnswer = false;\n\t}\n\n\tfunction resetVars() {\n\t\tsolution = null;\n\t\tdataError = null;\n\t}\n\n\tfunction getItems() {\n\t\treturn [\n\t\t\t['I', $figureI],\n\t\t\t['N', $figureN],\n\t\t\t['L', $figureL],\n\t\t\t['U', $figureU],\n\t\t\t['X', $figureX],\n\t\t\t['W', $figureW],\n\t\t\t['P', $figureP],\n\t\t\t['F', $figureF],\n\t\t\t['Z', $figureZ],\n\t\t\t['T', $figureT],\n\t\t\t['V', $figureV],\n\t\t\t['Y', $figureY],\n\t\t];\n\t}\n</script>\n\n<svelte:window bind:innerWidth={windowWidth} bind:innerHeight={windowHeight}/>\n\n<LinearProgress indeterminate closed=\"{!waitAnswer}\"/>\n<div class=\"options\" bind:clientHeight={optionsHeight}>\n\t<div class=\"options-line\">\n\t\t<Select variant=\"outlined\" bind:value={$selectPreset} label=\"Presets\" class=\"custom\" disabled=\"{waitAnswer}\">\n\t\t\t<Option value=\"\"></Option>\n\t\t\t{#each presets as preset}\n\t\t\t\t<Option value={preset}>{preset.name}</Option>\n\t\t\t{/each}\n\t\t</Select>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<NumberField bind:value={$width} label=\"width\" min=\"1\" max=\"100\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$height} label=\"height\" min=\"1\" max=\"100\" disabled=\"{waitAnswer}\"/>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<div class:nocorrect=\"{!allValueCorrect}\">\n\t\t\t<NumberField bind:value={$all} label=\"all\" min=\"0\" max=\"100\" disabled=\"{waitAnswer}\"/>\n\t\t</div>\n\t</div>\n\t<div class=\"options-line\">\n\t\t<NumberField bind:value={$figureI} label=\"I\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureN} label=\"N\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureL} label=\"L\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureU} label=\"U\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureX} label=\"X\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureW} label=\"W\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t</div>\n\t<div class=\"options-line\">\n\t\t<NumberField bind:value={$figureP} label=\"P\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureF} label=\"F\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureZ} label=\"Z\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureT} label=\"T\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureV} label=\"V\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t\t<NumberField bind:value={$figureY} label=\"Y\" min=\"0\" max=\"999\" disabled=\"{waitAnswer}\"/>\n\t</div>\n\t<div class=\"options-line\">\n\t\t<Button variant=\"raised\" on:click={clearAll} disabled=\"{waitAnswer}\">\n\t\t\t<Label>Clear All</Label>\n\t\t</Button>\n\t\t<Button variant=\"raised\" on:click={fillAll} disabled=\"{waitAnswer}\">\n\t\t\t<Label>Fill All</Label>\n\t\t</Button>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<Button variant=\"raised\" on:click={onStartStop}>\n\t\t\t<Label>{waitAnswer ? 'Stop' : 'Start'}</Label>\n\t\t</Button>\n\t</div>\n\t<div class=\"error-line\">\n\t\t{#if dataError}\n\t\t\t<div class=\"error\">{dataError}</div>\n\t\t{:else}\n\t\t\t<div>Area is {area} cells</div>\n\t\t{/if}\n\t</div>\n</div>\n\n<div class=\"space\">\n\t<div class=\"space_internal\">\n\t\t{#if solution}\n\t\t\t{#each solution as line, y}\n\t\t\t\t<div class=\"space_line\">\n\t\t\t\t\t{#each line as cell, x}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\ton:click={() => onCellClick(x, y)}\n\t\t\t\t\t\t\tclass=\"space_cell\"\n\t\t\t\t\t\t\tclass:disabled=\"{waitAnswer}\"\n\t\t\t\t\t\t\tstyle=\"width: {cellSize}px; height: {cellSize}px; background: {cell == null ? '#ffffff' : cell};\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t{:else}\n\t\t\t{#each space as line, y}\n\t\t\t\t<div class=\"space_line\">\n\t\t\t\t\t{#each line as cell, x}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\ton:click={() => onCellClick(x, y)}\n\t\t\t\t\t\t\tclass=\"space_cell\"\n\t\t\t\t\t\t\tclass:disabled=\"{waitAnswer}\"\n\t\t\t\t\t\t\tclass:empty_cell=\"{!cell}\"\n\t\t\t\t\t\t\tstyle=\"width: {cellSize}px; height: {cellSize}px;\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.options {\n\t\tmargin-top: 8px;\n\t\tmargin-bottom: 10px;\n\t}\n\t.options-line {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tmargin-bottom: 10px;\n\t}\n\t.options-line > :global(*:not(:last-child)) {\n\t\tmargin-right: 10px;\n\t}\n\t.nocorrect {\n\t\topacity: 0.5;\n\t}\n\t.space {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\t.space_internal {\n\t\tflex-grow: 0;\n\t\tbackground: #333333;\n\t}\n\t.space_line {\n\t\tdisplay: flex;\n\t}\n\t.space_line:not(:last-child) {\n\t\tmargin-bottom: 1px;\n\t}\n\t.space_cell {\n\t\tbackground: #888888;\n\t\tcursor: pointer;\n\t}\n\t.space_cell:not(:last-child) {\n\t\tmargin-right: 1px;\n\t}\n\t.disabled {\n\t\tcursor: default;\n\t}\n\t.empty_cell {\n\t\tbackground-color: #ffffff;\n\t}\n\t.error-line {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tmargin-bottom: 10px;\n\t}\n\t.error {\n\t\tcolor: #b71c1c;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AA6UC,QAAQ,cAAC,CAAC,AACT,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,IAAI,AACpB,CAAC,AACD,aAAa,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,IAAI,AACpB,CAAC,AACD,2BAAa,CAAW,kBAAkB,AAAE,CAAC,AAC5C,YAAY,CAAE,IAAI,AACnB,CAAC,AACD,UAAU,cAAC,CAAC,AACX,OAAO,CAAE,GAAG,AACb,CAAC,AACD,MAAM,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACxB,CAAC,AACD,eAAe,cAAC,CAAC,AAChB,SAAS,CAAE,CAAC,CACZ,UAAU,CAAE,OAAO,AACpB,CAAC,AACD,WAAW,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,AACd,CAAC,AACD,yBAAW,KAAK,WAAW,CAAC,AAAC,CAAC,AAC7B,aAAa,CAAE,GAAG,AACnB,CAAC,AACD,WAAW,cAAC,CAAC,AACZ,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,OAAO,AAChB,CAAC,AACD,yBAAW,KAAK,WAAW,CAAC,AAAC,CAAC,AAC7B,YAAY,CAAE,GAAG,AAClB,CAAC,AACD,SAAS,cAAC,CAAC,AACV,MAAM,CAAE,OAAO,AAChB,CAAC,AACD,WAAW,cAAC,CAAC,AACZ,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACD,WAAW,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,IAAI,AACpB,CAAC,AACD,MAAM,cAAC,CAAC,AACP,KAAK,CAAE,OAAO,AACf,CAAC"
}